pipeline {
    agent any

    stages{

    stage('Git Checkout'){
        steps{
            echo "git checkout"
            git branch: 'feature_wendy', changelog: false, credentialsId: 'wendy_ibtjenkins_creds', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
        }
    }
    stage('validate') {
        steps{
            withMaven(maven: 'maven_3.8') {
                sh 'mvn validate'
           }
        }
        }
    stage('compile') {
        steps{
          withMaven(maven: 'maven_3.8') {
              sh 'mvn compile'
        }
      }
    }
    stage('SonarQube Analysis') {
        environment {
            sonarScan = tool 'ibt-sonarqube'
        }
      steps {
        withSonarQubeEnv(credentialsId: 'student-sonar-token' , installationName: 'IBT sonarqube') {
          // sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=July_cohort"
          sh "${env.sonarScan}/bin/sonar-scanner"
        }
      }
    }
    stage('package') {
        steps{
          withMaven(maven: 'maven_3.8') {
              sh 'mvn package'
          }
       }
       }
     stage('Vulnerability scan - Dependency Check') {
       steps{
         dependencyCheck additionalArguments: '''
                                               -o "./"
                                               -s "./"
                                               -f "ALL"
                                               --prettyPrint ''', odcInstallation: 'dependency-check'
              dependencyCheckPublisher pattern: 'dependency-check-report.xml'
         }
       }

    stage('deploy'){
       steps{
          withMaven(maven: 'maven_3.8') {
            withCredentials([file(credentialsId: 'mvn_ci_wendy_settings_xml', variable: 'mvn_ci_wendy')]) {
                sh 'mvn deploy -s $mvn_ci_wendy'
            }
             }
       }
    }
    stage('deploy using configFile'){
       steps{
         withMaven(maven: 'maven_3.8') {
            configFileProvider([configFile(fileId: 'artifactory-settings', variable: 'mvn_settings_managed')]) {
                sh 'mvn deploy -s $mvn_settings_managed'
            }
        }
       }
    }
   }
}
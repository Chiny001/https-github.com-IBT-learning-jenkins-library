pipeline {
    agent any

    stages{
      stage('git checkout') {
         steps{
             git branch: 'feature-winfred', changelog: false, credentialsId: 'Github_user_cred_winfred', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
         }
      }
      stage('validate'){
          steps{
        withMaven(maven: 'maven_3.8') {
            sh 'mvn validate'
          }
        }
      }
      stage('compile'){
         steps{
           withMaven(maven: 'maven_3.8') {
                   sh 'mvn compile'
           }
         }
      }
      stage('test'){
               steps{
                 withMaven(maven: 'maven_3.8') {
                         sh 'mvn test'
                 }
               }
      }
    stage('SonarQube Analysis'){
        environment{
         sonarScan = tool 'ibt-sonarqube_4.8'
        }
        steps{
            withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                 sh "${env.sonarScan}/bin/sonar-scanner"
             }
            }
        }
    stage('package'){
                   steps{
                     withMaven(maven: 'maven_3.8') {
                             sh 'mvn package'
                     }
                   }
          }
stage('Dynamic Scan'){
        steps{
            dependencyCheck additionalArguments: '''
                     -o "./"
                     -s "./"
                     -f "ALL"
                    --prettyPrint ''', odcInstallation: 'dependency-check'
             dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }
      stage('Upload to Artifactory'){
              steps{
                  withMaven(maven: 'maven_3.8') {
                     withCredentials([file(credentialsId: 'mvn_settings_winfred', variable: 'mvn_settings_winfred')]) {
                         sh 'mvn deploy -s $mvn_settings_winfred'
                     }
                 }
             }
     }
      stage('Upload to Artifactory (configFile)'){
                 steps{
                     withMaven(maven: 'maven_3.8') {
                        configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
                            sh 'mvn deploy -s $mvn_settings_managed'
                        }
                     }
                 }
      }
   stage('Deploy to Dev'){
    steps{
           script{
                def remote = [name: 'Dev' , host: '159.223.145.202', allowAnyHosts: true]
                    withCredentials([usernamePassword(credentialsId: 'server_ssh_p', passwordVariable: 'password', usernameVariable: 'username')]) {
                        remote.user = username
                        remote.password = password
                     sshPut remote: remote, from: 'target/ibt-maven-1.6-SNAPSHOT.jar', into: '/opt/tomcat/apps'
                    }
               }
            }
        }
    }
}
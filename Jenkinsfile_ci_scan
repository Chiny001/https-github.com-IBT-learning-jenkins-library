pipeline {
    agent any
    parameters{
       string(name: 'USER_NAME', defaultValue: 'Morel Sami', description: 'User Introduction')
       string(name: 'BRANCH_NAME', defaultValue: 'feature-smorel', description: 'Git target branch')
    }

    environment{
        domain = 'IBT-Jenkins'
    }

    tools {
      maven 'maven_3.9.3'
    }

    stages {
        stage('Greetings') {
            steps {
                echo 'Hello ${USER_NAME} !!'
            }
        }
        stage('Build job details') {
            steps {
                echo 'Current job details ...'
                sh   'echo $env.domain'
                echo 'Job CI #${BUILD_NUMBER}'
                sh   'echo $JOB_DISPLAY_URL'
            }
        }
        stage('Git checkout') {
            steps {
                sh  'echo Into new branch $BRANCH_NAME ...'
                git branch: '$BRANCH_NAME', credentialsId: 'smorel_git_account', url: 'https://github.com/IBT-learning/ibt-maven.git'
                sh 'ls -lsrt src'
                sh 'cat src/main/java/com/ibt/app/App.java'
                echo 'all good'
            }
        }
        stage('Maven build job CI') {
            steps {
                echo 'Starting maven build job ...'
                sh 'mvn validate'
                sh 'mvn compile'
                sh 'mvn test'
            }
        }
        stage('Git repo scan') {
           environment {
              sonarTool = tool 'smorel-ibt-sonar_4.8'
           }
           steps {
              echo 'Staring code check scan in my ${BRANCH_NAME} git branch'
              withSonarQubeEnv(installationName: 'smorel-ibt-sonarqube') {
                 sh "${sonarTool}/bin/sonar-scanner -Dsonar.projectKey=sada"
              }
           }
        }
        stage('Maven package') {
                    steps {
                        echo 'Starting maven package job ...'
                        sh 'mvn package'
                    }
                }
        stage('Deploy to jFrog artifactory') {
            steps {
                echo 'Starting artifact deployment ..'
                configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_ci', variable: 'mvn_settings_ci')]) {
                    sh 'mvn deploy -s $mvn_settings_ci'
                }
            }
        }
    }
}
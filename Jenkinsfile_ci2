pipeline {
    agent any

    stages{

    stage('Git checkout') {
        steps{
            echo "git checkout"
            git branch: 'wendy-feature', changelog: false, credentialsId: 'wendy-ibtjenkins-credtoken', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'

       }
     }

    stage('validate') {
        steps{
            withMaven(maven: 'maven_3.8') {
                sh 'mvn validate'
            }
        }

    }
    stage('compile') {
        steps{
            withMaven(maven: 'maven_3.8') {
             sh 'mvn compile'
             }
        }
    }
    stage('SonarQube Analysis') {
            environment {
                sonarScan = tool 'ibt-sonarqube'
            }
          steps {
            withSonarQubeEnv(credentialsId: 'ibt-sonar' , installationName: 'IBT sonarqube') {
              // sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=July_cohort"
              sh "${env.sonarScan}/bin/sonar-scanner"
            }
          }
        }

    stage('Package') {
       steps{
           withMaven(maven: 'maven_3.8') {
            sh 'mvn package'
            }
        }
      }
    stage('Vulnerability scan - Dependency Check') {
       steps{
        dependencyCheck additionalArguments: '''
                                        -o "./"
                                         -s "./"
                                          -f "ALL"
                                           --prettyPrint ''', odcInstallation: 'dependency-check'
                  dependencyCheckPublisher pattern: 'dependency-check-report.xml'
             }
           }


    stage('Deploy') {
      steps{
          withMaven(maven: 'maven_3.8') {
          withCredentials([file(credentialsId: 'wendy_mvn_settings_jenkins', variable: 'mvn_settings_wendy2')]) {
           sh 'mvn deploy -s $mvn_settings_wendy2'

 }
               }
            }

         }
   stage('Deploy to Dev') {
      steps{
        script{
          def remote = [name: 'DEV1', host: '138.197.6.225', allowAnyHosts: true]
            withCredentials([usernamePassword(credentialsId: 'server-ssh-pw', passwordVariable: 'password', usernameVariable: 'username')]) {
              remote.user = username
                remote.password = password
                  sshPut remote: remote, from: 'target/ibt-maven-1.9.9-SNAPSHOT.jar' , into: '/opt/tomcat/apps'
                  }
                }
              }
            }

 }
}

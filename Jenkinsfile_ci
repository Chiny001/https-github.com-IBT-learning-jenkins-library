pipeline{
agent any

stages {
    stage ('Git Checkout') {
        steps{
            checkout changelog: false, poll: false, scm: scmGit(branches: [[name: '*/feature_belirta']], extensions: [], userRemoteConfigs: [[credentialsId: 'beli-git', url: 'https://github.com/IBT-learning/ibt-maven.git']])
        }
    }
    stage ('validate'){
        steps{
            withMaven(maven: 'maven_3.8') {
                sh 'mvn validate'
            }
        }
    }
    stage ('compile'){
        steps{
             withMaven(maven: 'maven_3.8') {
                     sh 'mvn compile'
             }
        }
    }
    stage ('run test'){
        steps{
            withMaven(maven: 'maven_3.8') {
                sh 'mvn test'
            }
        }
    }
    stage('SonarQube Analysis') {
    environment{
     sonarScan = tool 'ibt-sonarqube'
    }
    steps{
       withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
         sh "{$sonarScan}/bin/sonar-scanner"
         }
       }
    }
    stage ('package'){
            steps{
                withMaven(maven: 'maven_3.8') {
                    sh 'mvn package'
                }
            }
        }
     stage('Vulnerability scan - Dependency Check')
                     {
                          steps{
                                   dependencyCheck additionalArguments: '''
                                                                         -o "./"
                                                                         -s "./"
                                                                         -f "ALL"
                                                                         --prettyPrint ''', odcInstallation: 'dependency-check'
                                     dependencyCheckPublisher pattern: 'dependency-check-report.xml'
                          }
                     }


  }
}

pipeline {
    agent any
    tools { maven  'maven_3.8' }
    stages {
        stage('Git checkout') {
            steps {
                checkout changelog: false, poll: false, scm: scmGit(branches: [[name: '*/feature-Chia']], extensions: [], userRemoteConfigs: [[credentialsId: 'ibt', url: 'https://github.com/IBT-learning/ibt-maven.git']])
            }
        }
        stage ('Validate'){
            steps {
               sh 'mvn validate'
            }
        }
         stage ('Compile'){
                    steps {
                       sh 'mvn compile'
                    }
                }
            stage('SonarQube Analysis') {
                    environment {
                        sonarScan = tool 'ibt-sonarqube'
                          }
                    steps {
                        withSonarQubeEnv(credentialsId: 'ibt-sonar', installationName: 'IBT sonarqube') {
                            sh "${env.sonarScan}/bin/sonar-scanner"
                        }
                    }
                }
           stage ('Test'){
                              steps {
                                 sh 'mvn test'
                              }
                          }
           stage ('Package'){
                                         steps {
                                            sh 'mvn package'
                                         }
                                     }
            stage('Vulnerability scan - Dependency Check'){
                steps{
                                       dependencyCheck additionalArguments: '''
                                            -o "./"
                                            -s "./"
                                            -f "ALL"
                                            --prettyPrint ''', odcInstallation: 'dependency-check'
                                       dependencyCheckPublisher pattern: 'dependency-check-report.xml'
                                                     }
                }
            stage('Upload to Artifactory(secret-file)'){
                steps {
                    withCredentials([file(credentialsId: 'mvn-settings-Chia', variable: 'mvn-settings-Chia')]) {
                        sh 'mvn deploy -s $mvn-settings-Chia'
                    }
                    withCredentials([usernamePassword(credentialsId: 'ibt', passwordVariable: 'art-password', usernameVariable: 'art-name')]) {
                        sh 'echo $art-name $art-password'
                    }
                }
            }
            stage('Upload to Artifactory (config-file)'){
                steps {
                    configFileProvider([configFile(fileId: 'artifactory-settings', variable: 'maven_settings_artifactory')]) {
                        sh 'mvn deploy -s $maven_settings_artifactory'
                    }
                }
            }
         }
    }

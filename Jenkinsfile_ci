pipeline{
  agent any
tools { maven "maven_3.9.3" }
stages{
  stage('Git checkout'){
   steps{
    checkout scmGit(branches: [[name: '*/feature-allenache']], extensions: [], userRemoteConfigs: [[credentialsId: 'Allen_github', url: 'https://github.com/IBT-learning/ibt-maven.git']])
   }
   }
  }
  stage('validate'){
    steps{
      sh 'mvn validate'
    }
  }
  stage('compile'){
      steps{
        sh 'mvn compile'
      }
    }
    stage('test'){
          steps{
            sh 'mvn test'
          }
        }
        stage('SonarQube Analysis'){
        environment{
        sonarScan = tool 'ibt-sonarqube';
        }
        steps{
         withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
           sh "${env.sonarScan}/bin/sonar-scanner"
        }
         }
      }
       stage('package'){
                 steps{
                   withMaven(maven: 'maven_3.9.3') {
                       sh 'mvn package'
                   }
                 }
               }
               stage('Vulnerability Scan - Dependency check'){
                 steps{
                    dependencyCheck additionalArguments: '''
                    -0 "./"
                    -s "./"
                    -f "ALL"
                    --prettyPrint ''' , odcInstallation: 'dependency-check'
                    dependencyCheckPublisher pattern: 'check-report.xml', stopBuild: true, unstableTotalCritical: 0, unstableTotalHigh: 2, unstableTotalLow: 5, unstableTotalMedium: 3
               }
               }
        stage('Deploy'){
          steps{
          withCredentials([file(credentialsId: 'Allen_artifactory_settings', variable: 'Allen_artifactory_settings')]) {
              sh 'mvn deploy -s $Allen_artifactory_settings'



          }
}

     stage('Deploy (configFile)'){
          steps{
        configFileProvider([configFile(fileId: 'artifactory-settings', variable: 'mvn_settings_config')])
           sh 'mvn deploy -s $mvn_settings_config'
        }
        withMaven(maven: 'maven_3.9.3', mavenSettingsConfig: 'artifactory-settings')
           sh 'mvn deploy'

          }
        }
}



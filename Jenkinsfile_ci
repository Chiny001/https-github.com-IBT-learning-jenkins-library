pipeline {
agent any
tools {maven 'maven_3.8'}
stages {
  stage('Git checkout'){
    steps{
     checkout scmGit(branches: [[name: '*/koami_feature']], extensions: [], userRemoteConfigs: [[credentialsId: '1e7e3334-4478-4db6-92bd-fccd4de8a751', url: 'https://github.com/IBT-learning/ibt-maven.git']])
    }
  }
  stage('validate') {
      steps{
        sh  'mvn validate'
      }
  }
    stage('compile') {
       steps{
         sh  'mvn compile'
       }
    }
    stage('test') {
           steps{
             sh  'mvn test'
           }
    }
          stage('SonarQube Analysis') {
                          environment{
                              sonarScan = tool 'ibt-sonarqube'
                          }
                          steps{
                          withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                            sh "${env.sonarScan}/bin/sonar-scanner"
                          }
                         }
                        }
    stage('package') {
               steps{
                 withMaven(maven: 'maven_3.9.3') {
                    sh 'mvn package'
                 }
               }
    }
    stage('vulnerability scan - Dependency Check'){
           steps{
            dependencyCheck additionalArguments: '''
                         -o "./"
                         -s "./"
                         -f "ALL"
                         --prettyPrint ''',odcInstallation: 'dependency-check'
            dependencyCheckPublisher pattern: 'check-result.xml', unstableTotalCritical: 0, unstableTotalHigh: 2, unstableTotalLow: 5, unstableTotalMedium: 3
           }
    }
    stage('deploy'){
        steps{
        withCredentials([file(credentialsId: 'Koami_artifactory_file', variable: 'artifactory_settings')]) {
            sh 'mvn deploy -s $artifactory_settings'
        }
           
        }
    }
    stage('Deploy (configfile)'){
      steps{
       configFileProvider([configFile(fileId: 'artifactory-settings', variable: 'mvn_settings_config')]) {
           sh 'mvn deploy -s $mvn_settings_config'
       }
       withMaven(maven: 'maven_3.9.3', mavenSettingsConfig: 'artifactory-settings') {
              sh 'mvn deploy'
       }
      }
    }
  }
}


  pipeline {
      agent any
      parameters {
          string(name:'Branch', defaultValue:'main', description:'enter branch to build')
      }
      environment{
          Message="Jan26_Cohort"
      }
      stages {
          stage('Hello') {
              steps {
                  echo 'Hello World'
                  echo "${env.Message}"
              }
          }
           stage('hi') {
              steps {
                  echo 'Hi'
                  echo "${env.Message}"
              }
          }
          stage('Git checkout') {
              steps {
                  echo 'Hi this is my first pipeline job'
                  git branch: '${Branch}', changelog: false, credentialsId: 'for-github', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
              }
          }
           stage('GItSCM') {
              when{
                   expression {
                          env.BRANCH_NAME == "main"
                   }
                  }
                      steps {
                          echo 'trying gitscm to hook logs'
                          echo 'trying gitSCM poll'
                          echo "${env.variable}"
                      }
                  }
            stage('Build'){
            environment{
              variable="435"
            }
              steps{
                    sh "pwd"
                    sh "who"
                    echo "${env.variable}"
                    script{
                      def version = '1.2'
                      echo "${version}"
                    }
              }
            }
      }
       post {
              always{
                  echo "i will run always"
              }
          }
  }
  Footer
  Â© 2023 GitHub, Inc.
  Footer navigation
  Terms
  Privacy
  Security
  Status
  Docs
  Contact GitHub
  Pricing
  API
  Training
  Blog
  About







    ipeline{
    agent any

    stages {
    stage('Git checkout') {
                steps {
                    checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/patdada']], extensions: [], userRemoteConfigs: [[credentialsId: 'ibt', url: 'https://github.com/IBT-learning/ibt-maven.git']]]
                }
            }
     stage('Validate')
     {
        steps{
            sh "mvn validate"
        }
     }
     stage('Compile')
          {
             steps{
                 sh "mvn compile"
             }
          }
     stage('Run tests')
          {
             steps{
                 sh "mvn test"
             }
          }
      stage('SonarQube Analysis') {
       environment{
            scannerHome = tool 'ibt-sonarqube';
       }
           steps{
           withSonarQubeEnv(credentialsId: 'SQ-student', installationName: 'IBT sonarqube') {
             sh "$scannerHome/bin/sonar-scanner"
           }
          }
         }
       stage('Package')
            {
               steps{
                   sh "mvn package"
               }
            }
    }
}
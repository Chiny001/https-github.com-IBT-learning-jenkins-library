pipeline {
    agent any
    tools { maven 'maven_3.8' }
    stages {
        stage('Git checkout') {
            steps {
             checkout scmGit(branches: [[name: '*/official/josias']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-josias', url: 'https://github.com/IBT-learning/ibt-maven.git']])
           }
        }
        stage ('validate'){
            steps {
               sh 'mvn validate'
            }
        }
        stage ('compile'){
                    steps {
                       sh 'mvn compile'
                    }
        }
        stage('SonarQube Analysis') {
          environment {
                   sonarScan = tool 'IBT-sonarqube'
          }
            steps {
            withSonarQubeEnv(credentialsId: 'ibt-sonar', installationName: 'IBT sonarqube') {
                sh "${env.sonarScan}/bin/sonar-scanner"


            }
          }
        }
        stage ('test'){
                     steps {
                        sh 'mvn test'
                     }
        }
        stage ('package'){
                    steps {
                       sh 'mvn package'
                    }
        }
        stage('upload to Artifactory(secret-file)'){
            steps {
               withCredentials([file(credentialsId: 'mvn-settings-josias', variable: 'josias')]) {
                 sh 'mvn deploy -s $josias'
               }
               withCredentials([usernamePassword(credentialsId: 'jenkins-josias', passwordVariable: 'josias_password', usernameVariable: 'josias_user')]) {
                 sh 'echo $josias_user $josias_password'
               }
            }
        }
        stage('upload to Artifactory(config-file)'){
            steps {
               configFileProvider([configFile(fileId: 'artifactory-settings', variable: 'maven_settings_artifactory')]) {
                 sh 'mvn deploy -s $maven_settings_artifactory'
               }
            }
        }
    }
}




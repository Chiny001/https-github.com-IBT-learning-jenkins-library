pipeline{
    agent any
    tools{
        maven 'maven_3.9.3'
    }
    stages{
        stage('Git Checkout'){
            steps{
                git branch: 'feature_ros', changelog: false, credentialsId: 'git_creds', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
            }
        }
        stage('Validate'){
            steps{
              withMaven(maven: 'maven_3.9.3'){
              sh 'mvn validate'
              }
            }
        }
        stage('Compile'){
            steps{
                sh 'mvn -version'
                sh 'mvn compile'
            }
        }
        stage('Test'){
          steps{
              sh 'mvn test'
          }
        }
        stage('Package'){
          steps{
              sh 'mvn package'
          }
        }
        stage('SonarQube Analysis Scan'){
            steps{
                environment{
                    sonarScan = tool 'ibt-sonarqube_4.8'
                }
                withSonarQubeEnv(installationName: 'IBT sonarqube', credentialsId: 'student-sonar-token'){
                     sh "${env.sonarScan}/bin/sonar-scanner"
                }
            }
        }
        stage('Upload to Artifactory'){
            steps{
                 withCredentials([file(credentialsId: 'mvn_settings_gunjan', variable: 'mvn_setting_ros')]) {
                     sh 'mvn deploy -s $mvn_setting_ros'
                 }
            }
        }
        stage('Upload to Artifactory(configFile)'){
            steps{
            configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
                sh 'mvn deploy -s $mvn_settings_managed'
            }
            }
        }
    }
}
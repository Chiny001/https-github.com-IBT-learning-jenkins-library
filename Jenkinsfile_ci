pipeline{
    agent any

    stages {
    stage('Git checkout') {
                steps {
                    checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/patdada']], extensions: [], userRemoteConfigs: [[credentialsId: 'ibt', url: 'https://github.com/IBT-learning/ibt-maven.git']]]
                }
            }
     stage('Validate')
     {
        steps{
            sh "mvn validate"
        }
     }
     stage('Compile')
          {
             steps{
                 sh "mvn compile"
             }
          }
     stage('Run tests')
          {
             steps{
                 sh "mvn test"
             }
          }
      stage('SonarQube Analysis') {
       environment{
            scannerHome = tool 'ibt-sonarqube';
       }
           steps{
           withSonarQubeEnv(credentialsId: 'SQ-student', installationName: 'IBT sonarqube') {
             sh "$scannerHome/bin/sonar-scanner"
           }
          }
         }
       stage('Package')
            {
               steps{
                   sh "mvn package"
               }
            }
       stage('deploy to Artifactory')
       {
            steps{
                 withCredentials([file(credentialsId: 'mvn_settings_patdada', variable: 'settings')]) {
                     sh "mvn deploy -s $settings"
                 }
            }
       }
       stage('upload Artifactory - configFile')
       {
             steps{
                 configFileProvider([configFile(fileId: 'Mysettings', targetLocation: 'mvn_settings', variable: 'mvn_settings')]) {
                     mvn deploy -s $mvn_settings_patdada
                 }
             }
       }
    }
}